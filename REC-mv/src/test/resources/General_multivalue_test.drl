package rec.test;
 
import java.util.Date;

declare Event
	@role(event)
	@timestamp(start)
	@expires(100ms)
	start : long	
	value: double
end


declare Initially extends Event
	@role(event)
	@timestamp(start)
	start : long = 0	
end


declare Fluent
end

declare Sample
	@role(event)
	@timestamp(time)
	event : Event
	fluent : Fluent
	value : double
	time : long
end

declare MVI
	fluent : Fluent
	value : double
	start : long
	length : long
end

query holdsAt( Fluent $f,  double $v, long $t )
	exists MVI( fluent == $f, value == $v, 
		$s: start < $t, $t - $s < length )
end

query holdsFor( Fluent $f, double $v, long $ti, long $tt )
	exists MVI( fluent == $f, value == $v, $ti <= $tt,
		$s: start, $s <= $ti, $ti - $s < length,
		$s <= $tt, $tt - $s < length )
end

rule "setup 1"
when
	$f: Fluent( )
then
	insert(new MVI($f, (double) 0.0, (long) 0, (long) Long.MAX_VALUE));
end


rule "In time meaningful sample (interleaving-safe)"
no-loop 
salience ( Integer.MAX_VALUE - $t )
when
	$s: Sample( $f: fluent, $v: value, $t: time )

	$m: MVI( fluent == $f, start<$t, value != $v, $t <= length + start, $l: length )	

then
	Long old = $m.getLength();
	modify( $m ) {
		setLength($s.getTime() - $m.getStart());
	}
	
	System.out.println("MVI CLIP from event: " + $s.getEvent() + 
					   "\n$m.getStart(): " + $m.getStart() +
					   "\n$m.getLength(): " + $m.getLength() +
					   "\n\told: $m.getLength(): " + old +
					   "\n$s.getTime(): " + $s.getTime() + "\n");

end

rule "Compact MVIs"
no-loop
salience ( Integer.MAX_VALUE - $t2 )
when
	$s: Sample( $f: fluent, $v: value, $t: time )
    $r: Sample( fluent == $f, value == $v, $t2 : time > $t )
	not Sample( fluent == $f, time > $t && < $t2 )	
	$m: MVI( fluent == $f, start == $t2, $l: length )
then
	System.out.println("MVI COMPACT from event: " + $s.getEvent() +
					   "\n$m.getStart(): " + $m.getStart() +
					   "\n$m.getLength(): " + $m.getLength() +
					   "\n$s.getTime(): " + $s.getTime() + "\n");

	modify( $m ) {
		setStart( $t ),
		setLength( $l + ( $t2 - $t ) );
	}	
end


rule "Insert MVIs"
no-loop 
salience -2
when

	$s: Sample( $f: fluent, $v: value, $t: time )
    $r: Sample( fluent == $f, value != $v, $t2 : time > $t )
	not Sample( fluent == $f, time > $t && < $t2 )
	not MVI( start <= $t, start + length > $t )
then
    MVI mvi = new MVI( $f, $v, $t, $t2 - $t );

	System.out.println("MVI INSERT from event: " + mvi );

	insert( mvi );
end

rule "Insert MVIs 2"
no-loop 
salience -1	
when
	$s: Sample( $f: fluent, $v: value, $t: time )
	not Sample( fluent == $f, time > $t )	
	not MVI( fluent == $f, start <= $t, value == $v, length > $t )	
then
    MVI mvi = new MVI( $f, $v, $t, Long.MAX_VALUE - $t );

	System.out.println("MVI LAST from event: " + mvi );

	insert( mvi );
end